var documenterSearchIndex = {"docs":
[{"location":"Getting started with Images/#Reading-and-Writing-of-Images","page":"Getting started with Images","title":"Reading and Writing of Images","text":"","category":"section"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"OpenCV provides a wide range of functions for image processing, including reading and writing images.","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"OpenCV.jl provides 2 ways to read and write images","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"OpenCV native api\nFileIO.jl api","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"OpenCV provides imread and imwrite, while FileIO privides load and save for similar functionalities","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"note: Note\nFileIO api not suppport all image formats currently but it support major formats. If FileIO api not works then use OpenCV native api","category":"page"},{"location":"Getting started with Images/#Reading-Images","page":"Getting started with Images","title":"Reading Images","text":"","category":"section"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"using OpenCV\n\nimg_path = \"/path/to/image\"\nimg = OpenCV.imread(img_path)","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"with FileIO","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"using OpenCV, FileIO\n\nimg_path = \"/path/to/image\"\nimg = load(img_path)","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"in both cases img has same data. Both methods accept same reading flags[imreadflags].","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"using OpenCV\n\nimg_path = \"/path/to/image\"\nflag = OpenCV.IMREAD_UNCHANGED \nimg = OpenCV.imread(img_path, flag)","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"with FileIO","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"using OpenCV, FileIO\n\nimg_path = \"/path/to/image\"\nflag = OpenCV.IMREAD_UNCHANGED \nimg = load(img_path, flag)","category":"page"},{"location":"Getting started with Images/#Writing-Images","page":"Getting started with Images","title":"Writing Images","text":"","category":"section"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"using OpenCV\n\nimg = rand(UInt8, 1000, 1000) |> OpenCV.Mat\nimg_path = \"/path/to/image\"\nOpenCV.imwrite(img_path, img)","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"with FileIO","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"using OpenCV, FileIO\n\nimg = rand(UInt8, 1000, 1000) |> OpenCV.Mat\nimg_path = \"/path/to/image\"\nsave(img_path, img)","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"Both methods accept same writing flags[imwriteflags].","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"using OpenCV\n\nimg = rand(UInt8, 1000, 1000) |> OpenCV.Mat\nimg_path = \"/path/to/image\"\nflag = Int32[OpenCV.IMWRITE_JPEG_QUALITY, 100]\nOpenCV.imwrite(img_path, img, flag)","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"with FileIO","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"using OpenCV, FileIO\n\nimg = rand(UInt8, 1000, 1000) |> OpenCV.Mat\nimg_path = \"/path/to/image\"\nflag = Int32[OpenCV.IMWRITE_JPEG_QUALITY, 100]\nsave(img_path, img, flag)","category":"page"},{"location":"Getting started with Images/#Displaying-Images","page":"Getting started with Images","title":"Displaying Images","text":"","category":"section"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"When working with images, it's obviously helpful to be able to look at them. If you use Julia through Pluto, VSCode, or IJulia, images should display automatically.","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"Preview from Pluto.jl","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"(Image: pluto preview)","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"OpenCV.imshow method display image on Qt window.","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"(Image: qt preview)","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"Plots.jl To-do","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"Makie.jl To-do","category":"page"},{"location":"Getting started with Images/#Notes","page":"Getting started with Images","title":"Notes","text":"","category":"section"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"[imreadflags]: https://docs.opencv.org/4.x/d8/d6a/groupimgcodecsflags.html#ga61d9b0126a3e57d9277ac48327799c80","category":"page"},{"location":"Getting started with Images/","page":"Getting started with Images","title":"Getting started with Images","text":"[imwriteflags]: https://docs.opencv.org/4.x/d8/d6a/groupimgcodecsflags.html#ga292d81be8d76901bff7988d18d2b42ac","category":"page"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"CurrentModule = OpenCV","category":"page"},{"location":"#OpenCV.jl","page":"OpenCV.jl","title":"OpenCV.jl","text":"","category":"section"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"OpenCV.jl is a Julia package that provides an interface to the popular computer vision library OpenCV. It allows Julia users to leverage the extensive functionalities and algorithms offered by OpenCV for various computer vision tasks, such as image and video processing, object detection, feature extraction, and more.","category":"page"},{"location":"#Features","page":"OpenCV.jl","title":"Features","text":"","category":"section"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"Comprehensive OpenCV bindings: OpenCV.jl provides comprehensive bindings to the OpenCV library, enabling Julia users to access a wide range of computer vision algorithms and functionalities.\nEfficient and performant: The package is designed to leverage the speed and efficiency of both Julia and OpenCV, ensuring high-performance computer vision tasks.\nInteroperability: The package supports interoperability between Julia arrays and OpenCV's data structures, facilitating data exchange and manipulation between the two.","category":"page"},{"location":"#Installation","page":"OpenCV.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"You can install OpenCV.jl using Julia's package manager. Open a Julia REPL and run the following command:","category":"page"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"] add OpenCV","category":"page"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"This will download and install the package and its dependencies.","category":"page"},{"location":"#Usage","page":"OpenCV.jl","title":"Usage","text":"","category":"section"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"To start using OpenCV.jl in your Julia code, you first need to import the package:","category":"page"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"using OpenCV","category":"page"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"Once imported, you can call OpenCV functions and use its data structures. Here's a simple example that loads an image and applies a Gaussian blur:","category":"page"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"using ImageCore, OpenCV, TestImages, MosaicViews\n\nimg_orig = testimage(\"Mandrill\")\n\nimg_raw =  collect(rawview(channelview(img_orig)))\n\nimg_gray = OpenCV.cvtColor(img_raw, OpenCV.COLOR_RGB2GRAY)\n\nimg_blur = OpenCV.blur(img_gray, OpenCV.Size(Int32(9), Int32(9)))\n\nimg_back =  colorview(Gray, float.(img_blur)./255)[1,:,:]\n\nmosaic(img_orig, img_back; nrow=1)","category":"page"},{"location":"#Output:","page":"OpenCV.jl","title":"Output:","text":"","category":"section"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"(Image: )","category":"page"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"For more information on the available functions and usage examples, please refer to the documentation.","category":"page"},{"location":"#Contributing","page":"OpenCV.jl","title":"Contributing","text":"","category":"section"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"OpenCV.jl welcomes contributions from the community. If you encounter any issues, have suggestions for improvements, or would like to contribute code, please check the GitHub repository.","category":"page"},{"location":"#License","page":"OpenCV.jl","title":"License","text":"","category":"section"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"OpenCV.jl is licensed under the MIT License. Please refer to the license file for more information.","category":"page"},{"location":"#Acknowledgments","page":"OpenCV.jl","title":"Acknowledgments","text":"","category":"section"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"OpenCV.jl is built upon the excellent work of the OpenCV community. We are grateful for their continuous efforts in advancing the field of computer vision. @archit120 has been instrumental in the development of this package during GSOC 2021 and GSOC 2020.","category":"page"},{"location":"","page":"OpenCV.jl","title":"OpenCV.jl","text":"Modules = [OpenCV]","category":"page"}]
}
